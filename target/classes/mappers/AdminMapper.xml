<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminDAO">
	<!-- 회원관리 페이지 -->
	<!-- 회원 정보검색 -->
	<select id="memberSet" resultType="Member" parameterType="hashmap">
	SELECT * FROM member
		<where>
			<if test='searchCondition != null'>
			${searchCondition} LIKE '%${searchKeyword}%'
			</if>
		</where>
	ORDER BY member_id DESC
	</select>
	<!-- 회원목록 상세보기 -->
	<select id="selectMemberSet" parameterType ="Member" resultType="Member">
	SELECT * FROM member where member_id = #{memberId}
	</select>
	<!-- 회원삭제 -->
	<delete id="deleteMemberSet" parameterType= "Member">
	DELETE FROM member WHERE member_id = #{memberId}
	</delete>
	
	
	<!--휴먼 계정 관리-->
	<!-- 휴먼 계정 목록 보여주기 -->
	<select id="longtimeMemberList" resultType="Member">
	SELECT * FROM member
	WHERE last_con_date<![CDATA[<]]>ADD_MONTHS(sysdate, -6)
	</select>
	<!-- 휴먼 계정 복원하기-->
	
	
	<!-- 블랙리스트 관리 -->
	<!-- 블랙리스트 목록 보여주기 -->
	<select id="blacklistList" resultType="hashmap" parameterType="hashmap">
	SELECT * FROM black_list b inner join member m
	on b.member_id = m.member_id
	</select>
	<!--블랙리스트 상세보기-->
	<select id="blacklistSet" parameterType="blacklist" resultType="hashmap">
	SELECT * FROM black_list b inner join member m
	on b.member_id = m.member_id
	WHERE b.list_id=#{listId}
	</select>
	<!--블랙리스트 결과처리(등록)-->
	<update id="blacklistSubmit" parameterType="blacklist">
	UPDATE black_list
	SET approval='Y'
	WHERE list_id=#{listId}
	</update>



	<!-- 게시물관리 -->
	<!-- 게시물 정보검색 -->
	<select id="meetingList" resultType="hashmap" parameterType="hashmap">
	SELECT * FROM meeting m inner join host h
				on m.host_id = h.host_id
				inner join member mem
				on h.member_id = mem.member_id
		<where>
			<if test='meeting_search != null'>
			${meeting_search} LIKE '%${meeting_searchKeyword}%'
			</if>
		</where>
	ORDER BY m.meeting_id DESC
	</select>
	<!-- 게시물 상세보기 -->
	<select id="meetingSet" parameterType="Meeting" resultType="hashmap">
	SELECT * FROM meeting m inner join host h
				on m.host_id = h.host_id
				inner join member mem
				on h.member_id = mem.member_id WHERE m.meeting_id=#{meetingId}
	</select>
	<!-- 게시물 삭제 -->
	<delete id="meetingDelete" parameterType="Meeting">
	DELETE FROM meeting WHERE meeting_id=#{meetingId}
	</delete>
	<!-- 현재 진행중인 게시물 목록 -->
	<select id="meetingNow" resultType="hashmap">
	SELECT m.meeting_id, m.title, m.content,mem.name FROM meeting m inner join host h
				on m.host_id = h.host_id
				inner join member mem
				on h.member_id = mem.member_id
	WHERE  to_char(m.meeting_date, 'yy/mm/dd') = to_char(sysdate, 'yy/mm/dd')
	</select>
	
	

	<!-- 이벤트관리 -->
	<!-- 이벤트 목록보기 -->
	<select id="eventList" resultType="Event">
	SELECT * FROM event
	</select>
	<!-- 이벤트 등록하기 -->
	<insert id="eventInsert" parameterType="Event">
	INSERT INTO event(event_id, title, content, event_date_start, event_date_end, people_count,link
	<if test="eventImg != null">
	,event_img,event_real_img
	</if>
	)
	VALUES (seq_event.nextval,#{title},#{content},to_DATE(#{eventDateStart},'YYYY-MM-DD'),to_DATE(#{eventDateEnd},'YYYY-MM-DD'),#{peopleCount},#{link}
	<if test="eventImg != null">
	,#{eventImg}, #{eventRealImg}
	</if>
	)
	</insert>
	<!-- 이벤트 상세보기 -->
	<select id="eventSet" parameterType="Event" resultType="Event">
	SELECT * FROM event WHERE event_id=#{eventId}
	</select>
	<!-- 이벤트 삭제하기 -->
	<delete id="eventDelete" parameterType="Event">
	DELETE FROM event WHERE event_id=#{eventId}
	</delete>
	
	
	<!-- 공지사항 관리 -->
	<!-- 공지사항 목록 조회 -->
	<select id="noticelist" resultType="Notice">
	SELECT * FROM notice
	</select>
	<!-- 공지사항 상세 조회 -->
	<select id="noticeSet" parameterType="Notice" resultType="Notice">
	SELECT * FROM notice WHERE notice_id=#{noticeId} 
	</select>
	<!-- 공지사항 입력 -->
	<insert id="noticeinsert" parameterType="Notice">
	INSERT INTO notice(notice_id, title, content, write_date)
	VALUES (seq_notice.nextval, #{title}, #{content}, sysdate)
	</insert>
	<!-- 공지사항 삭제 -->
	<delete id="noticeDelete" parameterType="Notice">
	DELETE FROM notice WHERE notice_id = #{noticeId}
	</delete>
	
	
	<!-- Q&A 관리 -->
	<!-- Q&A 목록보기 -->
	<select id="qnaList" parameterType="Question" resultType="Question">
	SELECT *FROM question
	</select>
	<!-- Q&A 상세보기 -->
	<select id="qnaSet" parameterType="Question" resultType="hashmap">
	SELECT*FROM question q inner join member m
				on q.member_id = m.member_id	
	 WHERE q.question_id=#{questionId}
	</select>
	<!-- Q&A 답글달기 -->
	<update id="qnaUpdate" parameterType="Question">
	UPDATE question 
	SET answer='${answer}'
	WHERE question_id=#{questionId}
	</update>
	
</mapper>
